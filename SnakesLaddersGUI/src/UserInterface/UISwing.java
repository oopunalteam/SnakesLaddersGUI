/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface;

import static Business.GamePlay.menu;
import Data.Board;
import Data.Player;
import Data.Square;
import java.awt.Component;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author sergioalejandro
 */
public class UISwing extends JFrame implements UI {

    private int selectedOption;
    boolean confirm = false;

    /**
     * Creates new form UISwing
     */
    public UISwing() {
        initComponents();
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jButton4 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        Menu = new javax.swing.JPanel();
        MenuOptions = new javax.swing.JPanel();
        Setup = new javax.swing.JButton();
        Instructions = new javax.swing.JButton();
        About = new javax.swing.JButton();
        Quit = new javax.swing.JButton();
        GameSetup = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        BoardSize = new javax.swing.JComboBox<>();
        NumberPlayers = new javax.swing.JComboBox<>();
        OK1 = new javax.swing.JButton();
        PlayerSetup = new javax.swing.JPanel();
        PlayerTokens = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        Player1Token = new javax.swing.JTextField();
        Player2Token = new javax.swing.JTextField();
        Player3Token = new javax.swing.JTextField();
        Player4Token = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        OK2 = new javax.swing.JButton();
        BoardDisplay = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TextBoard = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        jButton4.setText("jButton4");

        jButton6.setText("jButton6");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Snakes and Ladders");
        getContentPane().setLayout(new javax.swing.OverlayLayout(getContentPane()));

        Menu.setLayout(new java.awt.GridBagLayout());

        MenuOptions.setLayout(new java.awt.GridBagLayout());

        Setup.setText("Play");
        Setup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SetupActionPerformed(evt);
            }
        });
        MenuOptions.add(Setup, new java.awt.GridBagConstraints());

        Instructions.setText("Instrutions");
        Instructions.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InstructionsActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        MenuOptions.add(Instructions, gridBagConstraints);

        About.setText("About");
        About.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AboutActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        MenuOptions.add(About, gridBagConstraints);

        Quit.setText("Quit");
        Quit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuitActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        MenuOptions.add(Quit, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        Menu.add(MenuOptions, gridBagConstraints);
        MenuOptions.getAccessibleContext().setAccessibleName("Menu");

        getContentPane().add(Menu);

        GameSetup.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Select the size of the board");
        jLabel1.setToolTipText("");
        GameSetup.add(jLabel1, new java.awt.GridBagConstraints());

        jLabel2.setText("Select the number of players");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        GameSetup.add(jLabel2, gridBagConstraints);

        BoardSize.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "8×8", "10×10", "12×12" }));
        BoardSize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BoardSizeActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        GameSetup.add(BoardSize, gridBagConstraints);

        NumberPlayers.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4" }));
        NumberPlayers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NumberPlayersActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        GameSetup.add(NumberPlayers, gridBagConstraints);

        OK1.setText("OK");
        OK1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OK1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        GameSetup.add(OK1, gridBagConstraints);

        getContentPane().add(GameSetup);

        PlayerTokens.setLayout(new java.awt.GridBagLayout());

        jLabel3.setText("Player 1");
        PlayerTokens.add(jLabel3, new java.awt.GridBagConstraints());

        jLabel4.setText("Player 2");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        PlayerTokens.add(jLabel4, gridBagConstraints);

        jLabel5.setText("Player 3");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        PlayerTokens.add(jLabel5, gridBagConstraints);

        jLabel6.setText("Player 4");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        PlayerTokens.add(jLabel6, gridBagConstraints);

        Player1Token.setText("jTextField1");
        Player1Token.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Player1TokenActionPerformed(evt);
            }
        });
        PlayerTokens.add(Player1Token, new java.awt.GridBagConstraints());

        Player2Token.setText("jTextField2");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        PlayerTokens.add(Player2Token, gridBagConstraints);

        Player3Token.setText("jTextField3");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        PlayerTokens.add(Player3Token, gridBagConstraints);

        Player4Token.setText("jTextField4");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        PlayerTokens.add(Player4Token, gridBagConstraints);

        jLabel7.setText("Players, select your tokens");

        OK2.setText("OK");
        OK2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OK2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PlayerSetupLayout = new javax.swing.GroupLayout(PlayerSetup);
        PlayerSetup.setLayout(PlayerSetupLayout);
        PlayerSetupLayout.setHorizontalGroup(
            PlayerSetupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PlayerSetupLayout.createSequentialGroup()
                .addContainerGap(231, Short.MAX_VALUE)
                .addGroup(PlayerSetupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PlayerSetupLayout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(212, 212, 212))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PlayerSetupLayout.createSequentialGroup()
                        .addComponent(OK2)
                        .addGap(258, 258, 258))))
            .addGroup(PlayerSetupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(PlayerSetupLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(PlayerTokens, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        PlayerSetupLayout.setVerticalGroup(
            PlayerSetupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PlayerSetupLayout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 151, Short.MAX_VALUE)
                .addComponent(OK2)
                .addGap(33, 33, 33))
            .addGroup(PlayerSetupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(PlayerSetupLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(PlayerTokens, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        getContentPane().add(PlayerSetup);

        BoardDisplay.setLayout(new javax.swing.BoxLayout(BoardDisplay, javax.swing.BoxLayout.Y_AXIS));

        TextBoard.setColumns(20);
        TextBoard.setRows(5);
        jScrollPane1.setViewportView(TextBoard);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(81, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(130, 130, 130))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(64, Short.MAX_VALUE))
        );

        BoardDisplay.add(jPanel1);

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1);

        jButton2.setText("jButton2");
        jPanel2.add(jButton2);

        jButton3.setText("jButton3");
        jPanel2.add(jButton3);

        jButton5.setText("jButton5");
        jPanel2.add(jButton5);

        BoardDisplay.add(jPanel2);

        getContentPane().add(BoardDisplay);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void QuitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuitActionPerformed
        selectedOption = 4;
    }//GEN-LAST:event_QuitActionPerformed

    private void SetupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SetupActionPerformed
        selectedOption = 1;
        Menu.setVisible(false);
        GameSetup.setVisible(true);
    }//GEN-LAST:event_SetupActionPerformed

    private void AboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AboutActionPerformed
        selectedOption = 3;
    }//GEN-LAST:event_AboutActionPerformed

    private void BoardSizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BoardSizeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BoardSizeActionPerformed

    private void OK1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OK1ActionPerformed
        //Goes to player setup
        Menu.setVisible(false);
        GameSetup.setVisible(false);
        PlayerSetup.setVisible(true);
        BoardDisplay.setVisible(false);
        boolean confirm;
    }//GEN-LAST:event_OK1ActionPerformed

    private void NumberPlayersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NumberPlayersActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NumberPlayersActionPerformed

    private void InstructionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InstructionsActionPerformed
        selectedOption = 2;
    }//GEN-LAST:event_InstructionsActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void Player1TokenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Player1TokenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Player1TokenActionPerformed

    private void OK2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OK2ActionPerformed
        //Goes to board display
        Menu.setVisible(false);
        GameSetup.setVisible(false);
        BoardDisplay.setVisible(true);
        boolean confirm;
    }//GEN-LAST:event_OK2ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton About;
    private javax.swing.JPanel BoardDisplay;
    private javax.swing.JComboBox<String> BoardSize;
    private javax.swing.JPanel GameSetup;
    private javax.swing.JButton Instructions;
    private javax.swing.JPanel Menu;
    private javax.swing.JPanel MenuOptions;
    private javax.swing.JComboBox<String> NumberPlayers;
    private javax.swing.JButton OK1;
    private javax.swing.JButton OK2;
    private javax.swing.JTextField Player1Token;
    private javax.swing.JTextField Player2Token;
    private javax.swing.JTextField Player3Token;
    private javax.swing.JTextField Player4Token;
    private javax.swing.JPanel PlayerSetup;
    private javax.swing.JPanel PlayerTokens;
    private javax.swing.JButton Quit;
    private javax.swing.JButton Setup;
    private javax.swing.JTextArea TextBoard;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void printMenu() {
        GameSetup.setVisible(false);
        Menu.setVisible(true);
        selectedOption = -1;
    }

    @Override
    public int menuOptions() {
        while (selectedOption == -1) {
            pause();
        }
        return selectedOption;
    }

    
    public void printInstructions() {
        Component frame = null;
        JOptionPane.showMessageDialog(frame, "Who needs instructions for snakes and ladders?");
    }

    @Override
    public void printAbout() {
        Component frame = null;
        JOptionPane.showMessageDialog(frame, "This game is a text version of Snakes & Ladders, a group proyect for OOP");
    }

    @Override
    public int askSize() {
        int selectSize = 0;
        if (BoardSize.getSelectedItem() == "8×8") {
            selectSize = 1;
        } else if (BoardSize.getSelectedItem() == "10×10") {
            selectSize = 2;
        } else if (BoardSize.getSelectedItem() == "12×12") {
            selectSize = 3;
        }
        return selectSize;
    }

    @Override
    public int askPlayerNum() {
        int selectNumber = 0;
        //El casting mas innecesario de la historia
        String s = (String) BoardSize.getSelectedItem();
        char c = s.charAt(0);
        int n = ((int) c )- 48;

        return selectNumber;
    }
    
    @Override
    public void confirm() {
        if (!confirm) {
            pause();
        } else if (confirm) {
            return;
        }
    }
    
    @Override
    public char askToken(int playerNum) {
        String token = "p";
        switch(playerNum) {
            case 1:
                token = Player1Token.getText();
            case 2:
                token = Player2Token.getText();
            case 3:
                token = Player3Token.getText();
            case 4:
                token = Player4Token.getText();
        }
        return token.charAt(0);
    }

    @Override
    public void printBoard(Board board) {
        TextBoard.setText(board.toString());
    }

    @Override
    public void playerWins() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void askRoll(Player player) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void turnFeedback(int move, Player player, Square position) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void arcFeedback(boolean good, int entry, int exit) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void badFeedback() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public int askMovement(Board board) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    private void pause() {
        try {
            Thread.sleep(50);
        } catch (InterruptedException ex) {
            Logger.getLogger(UISwing.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
